[[Translation:en/Development/NewGRF/Development Tools]]

Il y a quelques outils requis pour produire des NewGRFs. Tout d'abord, vous devrez choisir le "langage" que vous voulez utiliser pour créer le GRF. Il y a habituellement trois chaînes d'outil usuelles pour cela, parmi lesquelles il vous en faudra une:

* [http://www.openttd.org/download-grfcodec grfcodec/nforenum] - les deux outils les pus fondamentaux pour créer des NewGRFs. GRFCodec encode et décode des GRFs en images et (méta)données (NFO) brutes, et vice-versa. NFORenum, d'un autre côté, est un lieur et un vérificateur de syntaxe pour les fichiers NFO. Depuis GRFCodec 5.0, les deux outils sont réunis dans un même paquet. Vous pouvez comparer la chaîne d'outils rapidement avec un assembleur/désassembleur.

* [http://www.tt-forums.net/viewtopic.php?f=68&t=10167 GRFMaker] - un outil qui abstrait le NFO et permet de générer des fichiers GRF sans plonger dans l'édition hexadécimale. C'est un outil graphique qui présente les GRFs de façon abstraite en dissimulant certains détails. Tout le codage est fait via l'interface graphique; cependant, il ne supporte/offre qu'un sous-ensemble de ce qui est possible avec les NewGRFs.

* [http://dev.openttdcoop.org/projects/nml NML] - un langage de haut niveau pour écrire des NewGRFs. C'est de nouveau un langage texte, mais qui abstrait une grande partie de la complexité d'écriture des NewGRFs. C'est la seule chaîne d'outils qui supporte les évaluations de termes et les expressions, et elle est particulièrement adaptée aux GRFs offrant des paramètres utilisateur.

En plus de ces outils, vous pourriez être intéressé par ces outils supplémentaires:

* [http://dev.openttdcoop.org/projects/grf2html Grf2Html] - un outil qui génère une représentation HTML visible sur navigateur d'un GRF. Il peut être utilisé pour une analyse approfondie, une vérification sémantique des GRFs et l'étude de leur comportement. Comme tel, il est particulièrement approprié pour apprendre à écrire des NewGRFs en regardant et comprenant ceux écrits par d'autres. Cependant, il est d'une utilité limitée si vous vous décidez pour un langage de haut niveau comme NML, car il vous submergera probablement de détails abstraits par NML.

* [http://dev.openttdcoop.org/projects/ttdviewer TTDViewer] - un simple outil pour simplement afficher vos graphies .pcx ou .png. Cependant, il fait aussi l'animation de palette de TTD et vous offre d'appliquer dynamiquement la recolorisation, avec les couleurs de compagnie, à l'image. Comme il rechargera l'image dès qu'elle changera sur disque, vous pouvez l'utiliser en parallèle de votre programme de dessin pour avoir un aperçu rapide, surtout si vous utilisez les couleurs animées spéciales de la palette TTD ou utilisez les recolorisations comme les livrées de compagnie.

Autres ressources:
* [http://dev.openttdcoop.org #openttdcoop Zone de développement] - le site hébergeant la plupart des outils de développement et beaucoup de NewGRFs ouverts. Si vous faites un NewGRF sous licence GPL vous-mêmes, vous trouverez aussi des modèles pour créer des NewGRFs (à la fois pour GRFCodec/NFORenum et NML), pour débuter facilement.
* [http://www.tt-forums.net/viewforum.php?f=26 TT-Forums Développement de NewGRF] - Forum en anglais pour le développement NewGRF, la discussion, la création de graphismes et la recherche de collaborateurs pour votre projet.
* [http://www.tt-forums.net/viewforum.php?f=68 TT-Forums Discussion technique sur NewGRF] - Forum en anglais pour le support technique sur le développement de NewGRFs (''pas'' d'utilisation des NewGRFs!), les outils NewGRF et la discussion sur les spécifications de format NewGRF.
* [http://wiki.ttdpatch.net/tiki-index.php?page=NewGraphicsSpecs Spécification de format NewGRF bas niveau] - Vous devriez étudier cela si vous prévoyez d'écrire des NewGRFs avec GRFCodec/NFORenum et/ou voulez utiliser Grf2Html.
* [http://hg.openttdcoop.org/nml/raw-file/tip/docs/index.html Documentation de NML] - Spécification et manuel pour NML.


