[[Translation:en/Archive/Development/SpriteLoader]]


Istnieją obecnie dwie ładowarki sprite. Po załadowaniu 'sprite' jest przekazywany do funkcji enkodera [[pl/blitter|blitter]].

== GRF ==

Program ładujący 'sprites' GRF odczytuje 'sprite' do pamięci i dekoduje go. Dane indeksu kolorów są następnie kopiowane do części M wspólnego formatu pikseli RGBAM. Nie następuje konwersja do RGBA, ale wartość alfa jest ustawiona tak, aby odpowiadała przezroczystym częściom 'sprite' .

== PNG ==

Po pierwsze, sprite jest ładowany. Może to być paleta z paletą 32bpp, 16bpp, lub 8bpp . Większość formatów PNG powinna być w porządku. Te dane są kopiowane do części RGBA formatu RGBAM. Dodatkowo odczytywane są dwa pola tekstowe (tEXt) zawierające przesunięcia sprite X i Y. Te muszą być obecne.

Po drugie, wczytywana jest ikonka maski (z sufiksem nazwy pliku  'm' ), jeśli jest dostępna. Służy do odwzorowywania kolorów i musi być obrazem o wielkości 8bpp z paletą TTD. Jeśli jakiekolwiek piksele na tym obrazie nie są przezroczyste (indeks kolorów 0), wówczas istniejące dane RGB dla tego piksela zostaną usunięte, a część M zostanie wypełniona. Wartość alfa pozostawia się z oryginalnego obrazu RGBA, aby umożliwić półprzezroczyste 'przemapowane' części.

<!--[[Category:Development]]--> [[Category:pl/Rozwój]]
<!--[[Category:Graphics Development Documentation]]--> [[Category:pl/Dokumentacja Rozwoju Grafik]]